/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VultureSoftware;

import org.jfree.data.category.*;
import org.jfree.chart.*;
import databaseui.*;
import java.util.ArrayList;
import org.jfree.chart.plot.PlotOrientation;

/**
 *
 * @author Nathan
 */
public class ViewChartUI extends javax.swing.JFrame {

    DataBaseToolkit dbtk;
    
    /**
     * Creates new form ViewGraphUI
     */
    public ViewChartUI() {
        
        //Connect to database and utilize database tools.
        dbtk = new DataBaseToolkit();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        descLabel = new javax.swing.JLabel();
        manButton = new javax.swing.JButton();
        manDescLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        delayButton = new javax.swing.JButton();
        delayDescLabel = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        priorityButton = new javax.swing.JButton();
        priorityDescLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocation(new java.awt.Point(175, 0));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(102, 153, 255));

        titleLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(255, 255, 255));
        titleLabel.setText("View Charts and Stats");

        descLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        descLabel.setForeground(new java.awt.Color(255, 255, 255));
        descLabel.setText("View different bar charts to compare statistics between different tasks.");

        manButton.setText("Tasks for manufacturers");
        manButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manButtonActionPerformed(evt);
            }
        });

        manDescLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        manDescLabel.setForeground(new java.awt.Color(255, 255, 255));
        manDescLabel.setText("Compare the number of tasks for different manufacturers");

        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));

        delayButton.setText("Total number of delays");
        delayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delayButtonActionPerformed(evt);
            }
        });

        delayDescLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        delayDescLabel.setForeground(new java.awt.Color(255, 255, 255));
        delayDescLabel.setText("View the total number of delays");

        jSeparator2.setForeground(new java.awt.Color(255, 255, 255));

        priorityButton.setText("Compare task priority");
        priorityButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priorityButtonActionPerformed(evt);
            }
        });

        priorityDescLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        priorityDescLabel.setForeground(new java.awt.Color(255, 255, 255));
        priorityDescLabel.setText("Compare priority of all tasks");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addComponent(jSeparator2)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(titleLabel)
                    .addComponent(descLabel)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(manButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(manDescLabel))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(delayButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(delayDescLabel))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(priorityButton, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(priorityDescLabel)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(descLabel)
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(manButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(manDescLabel))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delayButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delayDescLabel))
                .addGap(32, 32, 32)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(priorityDescLabel)
                    .addComponent(priorityButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*
    
    */
    private void manButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manButtonActionPerformed
        
        ArrayList<JobObject> jobs = dbtk.getAllJobs();
        
        ArrayList<String> manufacturers = new ArrayList();
        
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        
        for(JobObject j : jobs)
        {
            if(!manufacturers.contains(j.getJobManufactrer()))
            {
                manufacturers.add(j.getJobManufactrer());
            }
        }
        for(String s : manufacturers)
        {
            int total = 0;
                    
            for(JobObject j : jobs)
            {
                ArrayList<TaskObject> tasks = dbtk.getTasksForJob(j.getJobNumber());
                
                if(s.equals(j.getJobManufactrer()) && tasks != null)
                {
                    total = total + tasks.size();
                    
                }
            }
            dataset.addValue(total, "No. of tasks for " + s + " motors", s);
        }
        
        JFreeChart manTaskChart = ChartFactory.createBarChart("A chart showing the amount of tasks associated with different motor manufacturers", "Manufacturer", "Frequency", dataset, PlotOrientation.VERTICAL, true, true, false);
        
        ChartFrame manTaskFrame = new ChartFrame("Manufacturer tasks", manTaskChart, true);
        manTaskFrame.setVisible(true);
        manTaskFrame.setSize(1000, 800);
        
        jobs.clear();
        manufacturers.clear();
    }//GEN-LAST:event_manButtonActionPerformed

    private void delayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delayButtonActionPerformed
        
        ArrayList<String> tasks = dbtk.getAllTasks();
        
        ArrayList<String> delayed = new ArrayList();
        ArrayList<String> notDelayed = new ArrayList();
        
        
        for(int i = 0; i < tasks.size(); i++)
        {
            ArrayList<TaskObject> taskData = dbtk.getTask(tasks.get(i));

            if(taskData.get(0).getDelay())
            {
                delayed.add("1");
            }
            else
            {
                notDelayed.add("1");
            }
        }
        
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        
        dataset.addValue(delayed.size(), "No. of tasks that are delayed", "Delays");
        dataset.addValue(notDelayed.size(), "No. of tasks that are not delayed", "Non-delays");
        
        JFreeChart delayChart = ChartFactory.createBarChart("Chart showing the number of tasks that are delayed compared to the number of tasks that aren't", "Delayed/Not Delayed", "Frequency", dataset, PlotOrientation.VERTICAL, true, true, false);
        
        ChartFrame delayFrame = new ChartFrame("Delays", delayChart, true);
        delayFrame.setVisible(true);
        delayFrame.setSize(1000, 800);
        
        delayed.clear();
        notDelayed.clear();
        tasks.clear();
        
    }//GEN-LAST:event_delayButtonActionPerformed

    private void priorityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priorityButtonActionPerformed
        ArrayList<String> tasks = dbtk.getAllTasks();
        
        ArrayList<String> low = new ArrayList();
        ArrayList<String> medium = new ArrayList();
        ArrayList<String> high = new ArrayList();
        
        for(int i = 0; i < tasks.size(); i++)
        {
            ArrayList<TaskObject> taskData = dbtk.getTask(tasks.get(i));

            if(taskData.get(0).getPriority() ==  null)
            {
                taskData = null;
            }
            else if(taskData.get(0).getPriority().equals("Low"))
            {
                low.add("1");
            }
            else if(taskData.get(0).getPriority().equals("Medium"))
            {
                medium.add("1");
            }
            else if(taskData.get(0).getPriority().equals("High"))
            {
                high.add("1");
            }
            
        }
        
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        
        dataset.addValue(low.size(), "No. of tasks that are low priority", "Low");
        dataset.addValue(medium.size(), "No. of tasks that are medium priority", "Medium");
        dataset.addValue(high.size(), "No. of tasks that are high priority", "High");
        
        JFreeChart priorityChart = ChartFactory.createBarChart("Chart comparing the priorities of all tasks", "Priority", "Frequency", dataset, PlotOrientation.VERTICAL, true, true, false);
        
        ChartFrame delayFrame = new ChartFrame("Priority", priorityChart, true);
        delayFrame.setVisible(true);
        delayFrame.setSize(1000, 800);
        
        low.clear();
        medium.clear();
        high.clear();
        tasks.clear();
    }//GEN-LAST:event_priorityButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewChartUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewChartUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewChartUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewChartUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewChartUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton delayButton;
    private javax.swing.JLabel delayDescLabel;
    private javax.swing.JLabel descLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton manButton;
    private javax.swing.JLabel manDescLabel;
    private javax.swing.JButton priorityButton;
    private javax.swing.JLabel priorityDescLabel;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
