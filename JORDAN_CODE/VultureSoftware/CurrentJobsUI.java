/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VultureSoftware;

import databaseui.*;
import java.util.*;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;

/**
 * @author Jordan 17012215
 */
public class CurrentJobsUI extends javax.swing.JFrame {
    
    DataBaseToolkit dbtk;
    DefaultListModel jobListModel;

    /**
     * Creates new form CurrentJobsUI
     */
    public CurrentJobsUI() {
        initComponents();
        
        jobListModel = new DefaultListModel();
        
        dbtk = new DataBaseToolkit();
        
        setJobList();
        
        //presumably a method to grey out buttons depending on whos logged in?
        /*
        technician adds motor and addds tasks
        */
    }

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        currentJobsPanel = new javax.swing.JPanel();
        infoLabel = new javax.swing.JLabel();
        viewButton = new javax.swing.JButton();
        addJobButton = new javax.swing.JButton();
        jobsScrollpane = new javax.swing.JScrollPane();
        jobList = new javax.swing.JList<>();
        refreshButton = new javax.swing.JButton();
        titleLabel = new javax.swing.JLabel();
        editButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        infoScrollpane = new javax.swing.JScrollPane();
        infoTextArea = new javax.swing.JTextArea();
        finalButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        currentJobsPanel.setBackground(new java.awt.Color(102, 153, 255));
        currentJobsPanel.setPreferredSize(new java.awt.Dimension(480, 389));

        infoLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        infoLabel.setForeground(new java.awt.Color(255, 255, 255));
        infoLabel.setText("Click on a job to view information about it");

        viewButton.setText("View Task List");
        viewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewButtonActionPerformed(evt);
            }
        });

        addJobButton.setText("Add Job");
        addJobButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJobButtonActionPerformed(evt);
            }
        });

        jobsScrollpane.setBorder(null);

        jobList.setBackground(new java.awt.Color(102, 153, 255));
        jobList.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jobList.setForeground(new java.awt.Color(255, 255, 255));
        jobList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Job list" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jobList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jobList.setFocusable(false);
        jobList.setSelectionBackground(new java.awt.Color(102, 153, 255));
        jobList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jobListValueChanged(evt);
            }
        });
        jobsScrollpane.setViewportView(jobList);

        refreshButton.setText("Refresh Job List");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        titleLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(255, 255, 255));
        titleLabel.setText("Current Jobs");

        editButton.setText("Edit Job");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete Job");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        infoTextArea.setEditable(false);
        infoTextArea.setColumns(20);
        infoTextArea.setRows(5);
        infoTextArea.setText("Job info");
        infoScrollpane.setViewportView(infoTextArea);

        finalButton.setText("Final Inpsection");
        finalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout currentJobsPanelLayout = new javax.swing.GroupLayout(currentJobsPanel);
        currentJobsPanel.setLayout(currentJobsPanelLayout);
        currentJobsPanelLayout.setHorizontalGroup(
            currentJobsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(currentJobsPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(currentJobsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jobsScrollpane, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(titleLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(currentJobsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(infoLabel)
                    .addComponent(infoScrollpane, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(currentJobsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(currentJobsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(currentJobsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(viewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addJobButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(refreshButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(finalButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        currentJobsPanelLayout.setVerticalGroup(
            currentJobsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(currentJobsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(currentJobsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(currentJobsPanelLayout.createSequentialGroup()
                        .addComponent(viewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addJobButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(refreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(finalButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(currentJobsPanelLayout.createSequentialGroup()
                        .addGroup(currentJobsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(titleLabel)
                            .addComponent(infoLabel))
                        .addGap(18, 18, 18)
                        .addGroup(currentJobsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(infoScrollpane)
                            .addComponent(jobsScrollpane))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(currentJobsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 757, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(currentJobsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //view tasks button
    private void viewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewButtonActionPerformed
        //String selectedItem = jList1.getSelectedValue();
        //System.out.println(selectedItem + "view button");
        new CurrentTasksUI().setVisible(true);
    }//GEN-LAST:event_viewButtonActionPerformed

    //add job button
    private void addJobButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJobButtonActionPerformed
        new MotorAddUI().setVisible(true); //only cust support can click  - jamie
    }//GEN-LAST:event_addJobButtonActionPerformed

    //refresh button
    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        setJobList();        
    }//GEN-LAST:event_refreshButtonActionPerformed

    //edit job button
    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        try{
        int numberEdit = Integer.parseInt(JOptionPane.showInputDialog(this, "Enter the job number of the motor to edit"));
        new MotorEditUI(dbtk.getJob(numberEdit)).setVisible(true);
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Error: must enter a number");
        }
    }//GEN-LAST:event_editButtonActionPerformed

    //delete button
    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnDeleteActionPerformed
       // cust support only - jamie
        
        String numberDel = JOptionPane.showInputDialog(this, "Enter the job number of the motor to delete");
        try{
        if(!dbtk.deleteJob(Integer.parseInt(numberDel)))
        {
            JOptionPane.showMessageDialog(null, "Error: job number " + numberDel + " doesn't exist", "Error", JOptionPane.ERROR_MESSAGE);
            //System.err.println("Error: job number " + numberDel + " doesn't exist");
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Succussfully deleted job " + numberDel);
            //System.out.println("Succussfully deleted job " + numberDel);
            setJobList();
        }
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Error: job number " + numberDel + " doesn't exist", "Error", JOptionPane.ERROR_MESSAGE);
            //System.err.println("Error: must enter a number");
                }
    }//GEN-LAST:event_jBtnDeleteActionPerformed
    private void jBtnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed

    }//GEN-LAST:event_deleteButtonActionPerformed

    private void finalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalButtonActionPerformed
        int numberFin = Integer.parseInt(JOptionPane.showInputDialog(this, "Enter the job number that has been inspected"));
        new FinalInspectionUI().setVisible(true); //in brackets will be job no when finished
    }//GEN-LAST:event_finalButtonActionPerformed

    private void jobListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jobListValueChanged
        
        String jobName = jobList.getSelectedValue();
        
        ArrayList<JobObject> jobData = dbtk.getJobString(jobName);
        
        String parts = jobData.get(0).getJobParts();
        
        infoTextArea.setText(null);
        infoTextArea.setText("Parts required: " + parts);
        
        
        
        /*String taskName = taskList.getSelectedValue();
        //Used to prevent errors with the filter function.
        if(taskName == null)
        {
            taskName = null;
        }
        //Get task details and assign them to the text area.
        else 
        {
        ArrayList<TaskObject> taskData = dbtk.getTask(taskName);
        
        String tech = taskData.get(0).getAssignedTo();
        String expectedTime = taskData.get(0).getExpectedTime();
        String prefs = taskData.get(0).getPrefs();
        String talents = taskData.get(0).getTalents();
        String priority = taskData.get(0).getPriority();
        
        
        detailsTextArea.setText(null);
        detailsTextArea.setText("Technician assigned to this task: " + tech + "\n\n");
        detailsTextArea.append("This task is expected to be completed on " + expectedTime + " \n\n");
        detailsTextArea.append("Task Preferences:\n" + prefs + "\n\n");
        detailsTextArea.append("Requiered Talents:\n" + talents + "\n\n");
        detailsTextArea.append("This tasks priority is " + priority + ".\n\n");
        */
    }//GEN-LAST:event_jobListValueChanged
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CurrentJobsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CurrentJobsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CurrentJobsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CurrentJobsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CurrentJobsUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addJobButton;
    private javax.swing.JPanel currentJobsPanel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editButton;
    private javax.swing.JButton finalButton;
    private javax.swing.JLabel infoLabel;
    private javax.swing.JScrollPane infoScrollpane;
    private javax.swing.JTextArea infoTextArea;
    private javax.swing.JList<String> jobList;
    private javax.swing.JScrollPane jobsScrollpane;
    private javax.swing.JButton refreshButton;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JButton viewButton;
    // End of variables declaration//GEN-END:variables


    //initialises and refreshes job list
    public void setJobList()
    {  
        try{
        ArrayList<JobObject> allJobs = dbtk.getAllJobs();
        jobList.setModel(jobListModel);
                    
        //to test no jobs in db:
        //allJobs = null; 
    
        if(allJobs == null)
        {
            jobListModel.addElement( null);
        }
        else
        {
            jobListModel.removeAllElements();
            
            for(int i = 0; i < allJobs.size(); i++)
            {               
                jobListModel.addElement(allJobs.get(i).getJobMotorName());  
            }
        }
        allJobs.clear();}
        catch(NullPointerException e){
            System.out.println("Error loading jobs");
        }
}

}
